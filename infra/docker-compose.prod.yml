services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    image: ${BACKEND_IMAGE}
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
    depends_on:
      - db
    volumes:
      - static:/app/static
      - media:/app/media

  frontend:
    build: ../frontend
    restart: "no"
    depends_on: []
    command: sh -c 'rm -rf /webroot/* && cp -r build/. /webroot/'
    volumes:
      - webroot:/webroot

  nginx:
    image: nginx:1.25.4-alpine
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - webroot:/usr/share/nginx/html:ro
      - static:/usr/share/nginx/html/static/:ro
      - media:/usr/share/nginx/html/media/:ro

volumes:
  pg_data:
  static:
  media:
  webroot: